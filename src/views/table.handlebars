<style>
  .chartdiv {
    width: 100%;
    height: 500px;
  }

  .piediv {
    width: 100%;
    height: 500px;
    /*padding-left: 50px;
    padding-right: 50px;*/
  }
</style>

<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
<script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
<script src="//cdn.amcharts.com/lib/5/themes/Material.js"></script>
<script src="//cdn.amcharts.com/lib/5/themes/Dataviz.js"></script>
<script src="//cdn.amcharts.com/lib/5/themes/Spirited.js"></script>
<script src="//cdn.amcharts.com/lib/5/themes/Moonrise.js"></script>
<script src="//cdn.amcharts.com/lib/5/themes/Kelly.js"></script>
<script src="//cdn.amcharts.com/lib/5/themes/Frozen.js"></script>
<script src="//cdn.amcharts.com/lib/5/themes/Micro.js"></script>



<div class="container-fluid">

  <ul class="nav nav-tabs border-bottom-0">
    <li class="nav-item">
      <a class="nav-link active nav-link-edit" aria-current="page" href="#" onclick="enable(0)" id="tab0" >WP2</a>
    </li>
    <li class="nav-item">
      <a class="nav-link nav-link-edit" href="#" onclick="enable(1)" id="tab1">WP3</a>
    </li>
    <li class="nav-item">
      <a class="nav-link nav-link-edit" href="#" onclick="enable(2)" id="tab2">WP4</a>
    </li>
    <li class="nav-item">
      <a class="nav-link nav-link-edit" href="#" onclick="enable(3)" id="tab3">WP5</a>
    </li>
    <li class="nav-item">
      <a class="nav-link nav-link-edit" href="#" onclick="enable(4)" id="tab4">WP6</a>
    </li>
    <li class="nav-item">
      <a class="nav-link nav-link-edit" href="#" onclick="enable(5)" id="tab5">Task8.8</a>
    </li>
  </ul>

  <div class="row row-cols-2">
    <div class="col">
       <table class="table" id="table0"></table>
    </div>
    <div class="col">
        <div id="chartdiv0" class="chartdiv"></div> 
    </div>
  </div>
  <div class="row row-cols-2">
    <div class="col">
       <table class="table" id="table1" style="display: none;"></table>
    </div>
    <div class="col">
      <div id="chartdiv1" class="chartdiv" style="display: none;"></div> 
    </div>
  </div>
  <div class="row row-cols-2">
    <div class="col">
       <table class="table" id="table2" style="display: none;"></table>
    </div>
    <div class="col">
      <div id="chartdiv2" class="chartdiv" style="display: none;"></div> 
    </div>
  </div>
  <div class="row row-cols-2">
    <div class="col">
       <table class="table" id="table3" style="display: none;"></table>
    </div>
    <div class="col">
      <div id="chartdiv3" class="chartdiv" style="display: none;"></div> 
    </div>
  </div>
  <div class="row row-cols-2">
    <div class="col">
       <table class="table" id="table4" style="display: none;"></table>
    </div>
    <div class="col">
      <div id="chartdiv4" class="chartdiv" style="display: none;"></div> 
    </div>
  </div>
  <div class="row" id="piediv" style="display: none;">
    <ul class="nav nav-tabs border-bottom-0">
      <li class="nav-item">
        <a class="nav-link active nav-link-edit" onclick="enablePieChart(0)" id="pietab0" >Participation per vertical</a>
      </li>
      <li class="nav-item">
        <a class="nav-link nav-link-edit" onclick="enablePieChart(3)" id="pietab3">Participation per profile</a>
      </li>
    </ul>
    <div class="row row-cols-3">
      <h3 class="col d-flex justify-content-center mt-2">1st OC</h3>
      <h3 class="col d-flex justify-content-center mt-2">2nd OC</h3>
      <h3 class="col d-flex justify-content-center mt-2">3rd OC</h3>
    </div>
    <div class="row row-cols-3">
      <div class="col">
        <div id="piechartdiv0" class="piediv"></div>
      </div>
      <div class="col">
        <div id="piechartdiv1" class="piediv"></div>
      </div>
      <div class="col">
        <div id="piechartdiv2" class="piediv"></div>
      </div>
      <div class="col">
        <div id="piechartdiv3" class="piediv" style="display: none;"></div>
      </div>
      <div class="col">
        <div id="piechartdiv4" class="piediv" style="display: none;"></div>
      </div>
      <div class="col">
        <div id="piechartdiv5" class="piediv" style="display: none;"></div>
      </div>
    </div>
  </div>
  <div class="row row-cols-2">
    <div class="col">
       <table class="table" id="table5" style="display: none;"></table>
    </div>
    <div class="col">
      <div id="chartdiv5" class="chartdiv" style="display: none;"></div> 
    </div>
  </div>
</div>

<script>

var numTablas = 0;
var pieData;
var thresholdData=[]

async function main(){
  await loadDatosThreshold()
  loadDatosTablas()
  loadDatosPie()
  
}

function loadDatosThreshold(){
    fetch('/thresholds', {method: 'GET'})
    .then(res =>  res.json())
    .then(data =>{
      thresholdData = data
    })
    .catch(e => {
      console.log(e);
    });
}

function loadDatosTablas(){
    fetch('/datos-table', {method: 'GET'})
    .then(res =>  res.json())
    .then(data =>{
        data.sheets.forEach((sheet, index)=> {
          loadJsonDatos(sheet, index)
          montarTabla(sheet, index)
          numTablas+=1
        })
    })
    .catch(e => {
      console.log(e);
    });
}

function montarTabla(json, indexGlobal){
 let idTabla = "table"+indexGlobal
 let html = ''
 let threshold = thresholdData[indexGlobal]
 json.sheet.forEach((element, index) => {
    switch (idTabla) {
      case "table0":
      case "table1":
      case "table2":
      case "table3":
      case "table5":
        if(index == 0){
          html+= `<thead><tr>`
          element.filanueva.forEach((clave, id) => {
              if(id == 2){
              }else{html+=`<th>${clave.clave}</th>`}
          })
            html+= `</thead></tr>`
        }else{
            html+= `<tbody><tr>`
            element.filanueva.forEach((clave, id) => {
                  if(id == 2){
                  }else{
                    if(id == 3){
                      console.log("Tabla número " + idTabla)
                      console.log("Fila número " + index)
                      console.log(threshold[index-1])
                      console.log(element.filanueva[3].clave)
                      html+=`<td>${ element.filanueva[3].clave > threshold[index-1] ? ">" + clave.clave : clave.clave}</td>`
                    }else{
                      html+=`<td>${clave.clave}</td>`
                    }
                  }
            })
              html+= `</tbody></tr>`
        }
        break;
      case "table4":
        if(index == 0){
          html+= `<thead><tr>`
          element.filanueva.forEach((clave, id) => {
            if(id == 2){
            }else{html+=`<th>${clave.clave}</th>`}
          })
          html+= `</thead></tr>`
        }else{
            html+= `<tbody><tr>`
            element.filanueva.forEach((clave, id) => {
              if(id == 2){
              }else{html+=`<td>${typeof clave.clave == "number" ? clave.clave * 100 + "%" : clave.clave}</td>`}
            })
            html+= `</tbody></tr>`
        }
       break;
    }
})

var tabla = document.getElementById(idTabla)
tabla.innerHTML = html

}

function enable(id){
  disableRest()
  var idTabla = "table"+id
  var idTab = "tab"+id
  var idGraph = "chartdiv"+id
  var tabla = document.getElementById(idTabla).style.display="block"
  var tab = document.getElementById(idTab).classList.add("active")
  var graph = document.getElementById(idGraph).style.display="block"
  if(id == 4) document.getElementById("piediv").style.display="block"

}

function disableRest(){
  for(let i=0; i<numTablas; i++){
    var idTabla = "table"+i
    var idTab = "tab"+i
    var idGraph = "chartdiv"+i
    var tabla = document.getElementById(idTabla).style.display="none"
    var tab = document.getElementById(idTab).classList.remove("active")
    var graph = document.getElementById(idGraph).style.display="none"
    if(i == 4) document.getElementById("piediv").style.display="none"
  } 
  
}

async function loadJsonDatos(jsonSheet,id){
  let data=[]
  let threshold = thresholdData[id]

  jsonSheet.sheet.forEach((entrada, index)=>{
      if(index == 0){
          
      }else{
        let jsonAux = {
          "CODE":"",
          "PERIOD1":0,
          "PERIOD2":0,
          "PERIOD3":0,
          "THRESHOLD":0,
          "MAXTHRESHOLD":0,
          "TOTALAMOUNT":0
        }

        jsonAux.CODE = entrada.filanueva[2].clave
        jsonAux.THRESHOLD = threshold[index-1]

        if(entrada.filanueva[3].clave == "-"){
          jsonAux.TOTALAMOUNT = 0
        }else{
          jsonAux.TOTALAMOUNT = Math.round(entrada.filanueva[3].clave / jsonAux.THRESHOLD * 100)
        }

        if(id == 4){
            jsonAux.THRESHOLD = threshold[index-1] * 100
            if(entrada.filanueva[3].clave == "-"){
              jsonAux.PERIOD1 = 0
            }else{
              jsonAux.PERIOD1 = entrada.filanueva[3].clave *100
            }
            if(entrada.filanueva[4].clave == "-"){
              jsonAux.PERIOD2 = 0
            }else{
              jsonAux.PERIOD2 = entrada.filanueva[4].clave *100
            }
            if(entrada.filanueva[5].clave == "-"){
              jsonAux.PERIOD3 = 0
            }else{
              jsonAux.PERIOD3 = entrada.filanueva[5].clave *100
            }
        }
        data.push(jsonAux) 
      }
  })
    loadGraficos(data, id)
}

function loadGraficos(data, id){
  switch (id) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 4:
      createDefaultColumnChart(data, id)
      break;
    default:
      console.log("No chart for that id")
  }
}

function createDefaultColumnChart(data, id){

  am5.ready(function() {

  let chartdiv = "chartdiv"+id
  var root = am5.Root.new(chartdiv);

  root.setThemes([
    am5themes_Kelly.new(root)
  ]);

  var chart = root.container.children.push(am5xy.XYChart.new(root, {
    panX: false,
    panY: false,
    wheelX: "panX",
    wheelY: "zoomX",
    layout: root.verticalLayout
  }));

  chart.set("scrollbarX", am5.Scrollbar.new(root, {
    orientation: "horizontal"
  })); 

  var legend = chart.children.push(
    am5.Legend.new(root, {
      centerX: am5.p50,
      x: am5.p50
    })
  );

  var xRenderer = am5xy.AxisRendererX.new(root, {
    cellStartLocation: 0.1,
    cellEndLocation: 0.9
  })

  var xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {
    categoryField: "CODE",
    renderer: xRenderer,
    tooltip: am5.Tooltip.new(root, {})
  }));

  xRenderer.grid.template.setAll({
    location: 1
  })

  xAxis.data.setAll(data);

    var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
      renderer: am5xy.AxisRendererY.new(root, {
        strokeOpacity: 0.1
      })
    }));
    var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
      min:0,
      max:100,
      numberFormat: "#'%'",
      strictMinMax: true,
      renderer: am5xy.AxisRendererY.new(root, {
        strokeOpacity: 0.1
      })
    }))

  function makeSeries(name, fieldName) {
  if(id == 4){
    var series2 = chart.series.push(am5xy.ColumnSeries.new(root, {
      name: "Threshold",
      xAxis: xAxis,
      yAxis: yAxis,
      valueYField: "THRESHOLD",
      categoryXField: "CODE",
      clustered: false
    }));
    
    series2.columns.template.setAll({
      tooltipText: "{name}, {categoryX}: {valueY} %",
      width: am5.percent(100),
      tooltipY: 0,
      strokeOpacity: 0
    });

    series2.set("fill", am5.color("#ffaa21"));
    series2.appear();
    series2.toBack();
    series2.data.setAll(data);
  }
    var series = chart.series.push(am5xy.ColumnSeries.new(root, {
      name: name,
      xAxis: xAxis,
      yAxis: yAxis,
      valueYField: fieldName,
      categoryXField: "CODE"
    }));
    

    series.columns.template.setAll({
      tooltipText: "{name}, {categoryX}: {valueY} %",
      width: am5.percent(70),
      tooltipY: 0,
      strokeOpacity: 0
    });

    series.data.setAll(data);
    series.appear();
    legend.data.push(series);
  }

  if(id == 4){
    makeSeries("1º Period", "PERIOD1");
    makeSeries("2º Period", "PERIOD2");
    makeSeries("3º Period", "PERIOD3");
  }else{
    makeSeries("Total Amount", "TOTALAMOUNT");
  }

  chart.appear(1000, 100);

  }); 
}

//Pie chart logic
function enablePieChart(id){
  let id2;
  id == 0 ? id2 = 3 : id2 = 0
  disableRestPieChart(id2)
  var idPieTab = "pietab"+id
  var tab = document.getElementById(idPieTab).classList.add("active")
  let limit = id +3
  for (let i=id; i<limit; i++){
    var idPieChart = "piechartdiv"+i
    var chart = document.getElementById(idPieChart).style.display="block"
  }
}

function disableRestPieChart(id){
  var idPieTab = "pietab"+id
  var tab = document.getElementById(idPieTab).classList.remove("active")
  let limit = id + 3
  for (let i=id; i<limit; i++){
    var idPieChart = "piechartdiv"+i
    var chart = document.getElementById(idPieChart).style.display="none"
  }
}

async function loadDatosPie(){
    await fetch('/datos-pie', {method: 'GET'})
    .then(res =>  res.json())
    .then(data =>{
       pieData = data
    })
    .catch(e => {
      console.log(e);
    });

  pieData.forEach((e, index) =>{
    createPieChart(e,index)
  })
}


function createPieChart(data,id){
  am5.ready(function() {
  let piechartdiv = "piechartdiv"+id
  var root = am5.Root.new(piechartdiv);
  root.setThemes([
    am5themes_Kelly.new(root)
  ]);
  var chart = root.container.children.push(
    am5percent.PieChart.new(root, {
      layout: root.verticalLayout,
    })
  );
  var series = chart.series.push(
    am5percent.PieSeries.new(root, {
      valueField: "value",
      categoryField: "category",
      alignLabels: false
    })
  );
  series.labels.template.setAll({
    textType: "circular",
    centerX: 0,
    centerY: 0
  });
  series.data.setAll(data);
  series.appear(1000, 100);
  });
}

main()
</script>